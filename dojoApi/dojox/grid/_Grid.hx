package dojox.grid;

extern class _Grid extends dijit._Widget {
function _fillContent(source:Dynamic):Void;
function getCachedTemplate(templatePath:String,?templateString:String,alwaysUseString:Dynamic):String;
function onKeyEvent(e:Dynamic):Void;
function onContentEvent(e:Dynamic):Void;
function onHeaderEvent(e:Dynamic):Void;
function onStyleRow(inRow:Dynamic):Void;
function onMouseOverRow(e:Dynamic):Void;
function onMouseOutRow(e:Dynamic):Void;
function onMouseDownRow(e:Dynamic):Void;
function onCellMouseOver(e:Dynamic):Void;
function onCellMouseOut(e:Dynamic):Void;
function onCellMouseDown(e:Dynamic):Void;
function onCellClick(e:Dynamic):Void;
function onCellDblClick(e:Dynamic):Void;
function onCellContextMenu(e:Dynamic):Void;
function onCellFocus(inCell:Dynamic,inRowIndex:Int):Void;
function onRowClick(e:Dynamic):Void;
function onRowDblClick(e:Dynamic):Void;
function onRowMouseOver(e:Dynamic):Void;
function onRowMouseOut(e:Dynamic):Void;
function onRowMouseDown(e:Dynamic):Void;
function onRowContextMenu(e:Dynamic):Void;
function onHeaderMouseOver(e:Dynamic):Void;
function onHeaderMouseOut(e:Dynamic):Void;
function onHeaderCellMouseOver(e:Dynamic):Void;
function onHeaderCellMouseOut(e:Dynamic):Void;
function onHeaderCellMouseDown(e:Dynamic):Void;
function onHeaderClick(e:Dynamic):Void;
function onHeaderCellClick(e:Dynamic):Void;
function onHeaderDblClick(e:Dynamic):Void;
function onHeaderCellDblClick(e:Dynamic):Void;
function onHeaderCellContextMenu(e:Dynamic):Void;
function onHeaderContextMenu(e:Dynamic):Void;
function onStartEdit(inCell:Dynamic,inRowIndex:Int):Void;
function onApplyCellEdit(inValue:String,inRowIndex:Int,inFieldIndex:Int):Void;
function onCancelEdit(inRowIndex:Int):Void;
function onApplyEdit(inRowIndex:Int):Void;
function onCanSelect(inRowIndex:Int):Void;
function onCanDeselect(inRowIndex:Int):Void;
function onSelected(inRowIndex:Int):Void;
function onDeselected(inRowIndex:Int):Void;
function onSelectionChanged():Void;
function get(inRowIndex:Int):Void;
function textSizeChanged():Void;
function sizeChange():Void;
function createManagers():Void;
function createSelection():Void;
function createScroller():Void;
function createLayout():Void;
function onMoveColumn():Void;
function createViews():Void;
function createView(inClass:Dynamic,idx:Dynamic):Void;
function buildViews():Void;
function setStructure(inStructure:Dynamic):Void;
function getColumnTogglingItems():Void;
function setHeaderMenu(menu:Dynamic):Void;
function setupHeaderMenu():Void;
function getItem(inRowIndex:Dynamic):Void;
function showMessage(message:Dynamic):Void;
function hasLayout():Void;
function resize(changeSize:Dynamic,resultSize:Dynamic):Void;
function adaptWidth():Void;
function adaptHeight(inHeaderHeight:Dynamic):Void;
function render():Void;
function prerender():Void;
function postrender():Void;
function postresize():Void;
function renderRow(inRowIndex:Dynamic,inNodes:Dynamic):Void;
function rowRemoved(inRowIndex:Dynamic):Void;
function beginUpdate():Void;
function endUpdate():Void;
function defaultUpdate():Void;
function update():Void;
function updateRow(inRowIndex:Int):Void;
function updateRows(startIndex:Int,howMany:Int):Void;
function updateRowCount(inRowCount:Int):Void;
function updateRowStyles(inRowIndex:Dynamic):Void;
function rowHeightChanged(inRowIndex:Int):Void;
function scrollTo(inTop:Int):Void;
function finishScrollJob():Void;
function setScrollTop(inTop:Dynamic):Void;
function scrollToRow(inRowIndex:Int):Void;
function styleRowNode(inRowIndex:Dynamic,inRowNode:Dynamic):Void;
function getCell(inIndex:Int):Void;
function setCellWidth(inIndex:Dynamic,inUnitWidth:Dynamic):Void;
function getCellName(inCell:Dynamic):String;
function canSort(inSortInfo:Int):Void;
function sort():Void;
function getSortAsc(inSortInfo:Dynamic):Bool;
function getSortIndex(inSortInfo:Dynamic):Int;
function setSortIndex(inIndex:Int,inAsc:Bool):Void;
function setSortInfo(inSortInfo:Dynamic):Void;
function doKeyEvent(e:Dynamic):Void;
function dispatchKeyEvent(e:Dynamic):Void;
function dispatchContentEvent(e:Dynamic):Void;
function dispatchHeaderEvent(e:Dynamic):Void;
function dokeydown(e:Dynamic):Void;
function doclick(e:Dynamic):Void;
function dodblclick(e:Dynamic):Void;
function docontextmenu(e:Dynamic):Void;
function doheaderclick(e:Dynamic):Void;
function doheaderdblclick(e:Dynamic):Void;
function doheadercontextmenu(e:Dynamic):Void;
function doStartEdit(inCell:Dynamic,inRowIndex:Dynamic):Void;
function doApplyCellEdit(inValue:Dynamic,inRowIndex:Dynamic,inFieldIndex:Dynamic):Void;
function doCancelEdit(inRowIndex:Dynamic):Void;
function doApplyEdit(inRowIndex:Dynamic):Void;
function addRow():Void;
function removeSelectedRows():Void;
function markupFactory(props:Dynamic,node:Dynamic,ctor:Dynamic,cellFunc:Dynamic):Dynamic;
var templateString:String;
var templatePath:String;
var widgetsInTemplate:Bool;
var cellOverClass:String;
var classTag:String;
var rowCount:Int;
var keepRows:Int;
var rowsPerPage:Int;
var autoWidth:Bool;
var autoHeight:Dynamic;
var autoRender:Bool;
var defaultHeight:String;
var height:String;
var structure:Dynamic;
var elasticView:Int;
var singleClickEdit:Bool;
var selectionMode:String;
var rowSelector:Dynamic;
var columnReordering:Bool;
var headerMenu:Dynamic;
var placeholderLabel:String;
var selectable:Bool;
var loadingMessage:String;
var errorMessage:String;
var noDataMessage:String;
var sortInfo:Float;
var themeable:Bool;
var invalidated:Dynamic;
var updating:Bool;
var fastScroll:Bool;
var delayScroll:Bool;
var scrollRedrawThreshold:Int;

}
